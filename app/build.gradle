/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */
buildscript {
    dependencies {
        classpath "org.flywaydb:flyway-mysql:9.21.1"
        classpath "mysql:mysql-connector-java:8.0.26"
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id "org.flywaydb.flyway" version "9.21.1"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    // Rest API javalin
    implementation 'io.javalin:javalin:5.6.1'
    // This dependency is used by the javalin.
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    // This dependency is used by the javalin to json converter
    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.0")
    //DI
    implementation 'com.google.inject:guice:7.0.0'
    //ORM
    implementation 'com.dieselpoint:norm:1.0.5'
    //MySQL
    implementation 'mysql:mysql-connector-java:8.0.26'
}

application {
    // Define the main class for the application.
    mainClass = 'nf.clear.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

flyway {
    url = property('database.url')
    user = property('database.user')
    password = property('database.password')
}
